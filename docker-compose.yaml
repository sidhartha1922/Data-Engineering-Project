version: '3.8'

# -----------------------------
# Common Airflow config
# -----------------------------
x-airflow-common:
  &airflow-common
  image: apache/airflow:3.1.0
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    # SQL ALCHEMY is used to connect Airflow to metadata DB (without this airflow cannot store any metadata or DAGs won't run)
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: >-
      postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
    _PIP_ADDITIONAL_REQUIREMENTS: ""
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
  user: "${AIRFLOW_UID}:0"
  depends_on:
    - postgres

services:
  # -----------------------------
  # Postgres (Airflow metadata DB)
  # -----------------------------
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    restart: always

  # -----------------------------
  # Business Data Postgres DB
  # -----------------------------
  # project-db service only spins up a Postgres container with a database (projectdb) and user credentials (project_user)
  project-db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${PROJECT_DB_USER}
      POSTGRES_PASSWORD: ${PROJECT_DB_PASSWORD}
      POSTGRES_DB: ${PROJECT_DB_NAME}
    ports:
      - "${PROJECT_DB_PORT}:5432"
    volumes:
      - project-db-volume:/var/lib/postgresql/data # Persist data
      - ./project-init:/docker-entrypoint-initdb.d/ # Mount SQL scripts to auto-create schema/tables (TESTING ONLY, Remove later)
    restart: always

  # -----------------------------
  # Airflow Webserver
  # -----------------------------
  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "${AIRFLOW_PORT}:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  # -----------------------------
  # Airflow Scheduler
  # -----------------------------
  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always

  # -----------------------------
  # Airflow Init (DB migrations + admin user)
  # -----------------------------
  # Below command added to ONLY create user in meatadata DB
  airflow-init:
    <<: *airflow-common
    command: bash -c "
      airflow db migrate &&
      airflow users create \
          --username ${_AIRFLOW_WWW_USER_USERNAME:-admin} \
          --password ${_AIRFLOW_WWW_USER_PASSWORD:-admin} \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com &&
      airflow connections add 'my_postgres' \
        --conn-type postgres \
        --conn-login ${PROJECT_DB_USER} \
        --conn-password ${PROJECT_DB_PASSWORD} \
        --conn-host ${PROJECT_DB_HOST} \
        --conn-port ${PROJECT_DB_PORT} \
        --conn-schema ${PROJECT_DB_NAME}"
    # Above project DB connection info added to airflow meatdata DB to ensure Business data works. Needed when we set conn_id='my_postgres' in DAG Py scripts
    # Airflow will throw error if DB isn't created already while adding connections for Business related DB. DB created during postgres service for Project DB creation (check above)
    restart: on-failure

  # -----------------------------
  # pgAdmin (optional GUI)
  # -----------------------------
  # 1 Refered from [https://medium.com/@yixin.feng20001120/building-a-data-pipeline-with-airflow-postgresql-and-docker-8639369f54f9]
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - postgres
      - project-db # Business

